{"ast":null,"code":"var _jsxFileName = \"/home/navgurukul/CLone-upper-lower/Upper-Lower/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbaar from './components/Navbaar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport moduleName from './components/'; // import { type } from '@testing-library/user-event/dist/type'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let [mode, setMode] = useState('dark');\n  let [alert, setAlert] = useState(null);\n\n  const alertAlert = (massage, type) => {\n    setAlert({\n      massage: massage,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const enableDarkMOde = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      alertAlert('Dark mood has been unabled', 'success');\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      alertAlert('Light mood has been unabled', 'success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbaar, {\n      alertAlert: alertAlert,\n      mode: mode,\n      enableDarkMOde: enableDarkMOde\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        color: mode == 'dark' ? 'black' : 'red'\n      },\n      className: \"container my-5\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        mode: mode,\n        alertAlert: alertAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Reuting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"19xzhD603DuUBaimf6Dom9APjvo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/navgurukul/CLone-upper-lower/Upper-Lower/src/App.js"],"names":["React","useState","Navbaar","Textform","Alert","moduleName","App","mode","setMode","alert","setAlert","alertAlert","massage","type","setTimeout","enableDarkMOde","document","body","style","backgroundColor","fontWeight","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAI,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,MAAD,CAA3B;AACA,MAAI,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA7B;;AAEA,QAAMU,UAAU,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;AAC/BH,IAAAA,QAAQ,CAAC;AACPE,MAAAA,OAAO,EAACA,OADD;AAEPC,MAAAA,IAAI,EAACA;AAFE,KAAD,CAAR;AAIAC,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;;AAUA,QAAMK,cAAc,GAAC,MAAI;AACvB,QAAGR,IAAI,KAAG,MAAV,EAAiB;AACfC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAQ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;AACAR,MAAAA,UAAU,CAAC,4BAAD,EAA8B,SAA9B,CAAV;AACD,KAJD,MAKI;AACFH,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAQ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,MAApC;AACAR,MAAAA,UAAU,CAAC,6BAAD,EAA+B,SAA/B,CAAV;AACD;AACF,GAXD;;AAaA,sBACE;AAAA,4BACJ,QAAC,OAAD;AACA,MAAA,UAAU,EAAEA,UADZ;AAEA,MAAA,IAAI,EAAEJ,IAFN;AAGA,MAAA,cAAc,EAAEQ;AAHhB;AAAA;AAAA;AAAA;AAAA,YADI,eAKJ,QAAC,KAAD;AACA,MAAA,KAAK,EAAEN;AADP;AAAA;AAAA;AAAA;AAAA,YALI,eASJ;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,UAAU,EAAC,MAAZ;AAAmBC,QAAAA,KAAK,EAACd,IAAI,IAAE,MAAN,GAAc,OAAd,GAAsB;AAA/C,OAAZ;AAAoE,MAAA,SAAS,EAAC,gBAA9E;AAAA,6BACA,QAAC,QAAD;AACA,QAAA,IAAI,EAAEA,IADN;AAEA,QAAA,UAAU,EAAEI;AAFZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATI,eAiBJ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAjBI;AAAA,kBADF;AAqBD,CAhDD;;GAAML,G;;KAAAA,G;AAkDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Navbaar from './components/Navbaar'\nimport Textform from './components/Textform'\nimport Alert from './components/Alert'\nimport moduleName from './components/'\n// import { type } from '@testing-library/user-event/dist/type'\n\nconst App = () => {\n  let [mode,setMode]=useState('dark');\n  let [alert,setAlert]=useState(null);\n\n  const alertAlert=(massage,type)=>{\n    setAlert({\n      massage:massage,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const enableDarkMOde=()=>{\n    if(mode==='dark'){\n      setMode('light')\n      document.body.style.backgroundColor=\"white\"\n      alertAlert('Dark mood has been unabled','success')\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor='grey'\n      alertAlert('Light mood has been unabled','success')\n    }\n  }\n\n  return (\n    <>\n<Navbaar\nalertAlert={alertAlert}\nmode={mode}\nenableDarkMOde={enableDarkMOde}/>\n<Alert \nalert={alert}\n/>\n\n<div style={{fontWeight:\"bold\",color:mode=='dark'? 'black':'red' }} className=\"container my-5\">\n<Textform \nmode={mode}\nalertAlert={alertAlert}\n/>\n\n</div>\n\n<Reuting/>\n</>\n  )\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}