{"ast":null,"code":"var _jsxFileName = \"/home/navgurukul/All React Apps/Upper-Lower/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbaar from './components/Navbaar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport { type } from '@testing-library/user-event/dist/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let [mode, setMode] = useState('dark');\n  let [alert, setAlert] = useState(null);\n\n  const alertAlert = (massage, type) => {\n    setAlert({\n      massage: massage,\n      type: type\n    });\n  };\n\n  const enableDarkMOde = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      alertAlert('Dark mood has been unabled', 'success');\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      alertAlert('Light mood has been unabled', 'success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbaar, {\n      mode: mode,\n      enableDarkMOde: enableDarkMOde\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        color: mode == 'dark' ? 'yellow' : 'red'\n      },\n      className: \"container my-5\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"19xzhD603DuUBaimf6Dom9APjvo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/navgurukul/All React Apps/Upper-Lower/src/App.js"],"names":["React","useState","Navbaar","Textform","Alert","type","App","mode","setMode","alert","setAlert","alertAlert","massage","enableDarkMOde","document","body","style","backgroundColor","fontWeight","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,QAAqB,uCAArB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAI,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,MAAD,CAA3B;AACA,MAAI,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA7B;;AAEA,QAAMU,UAAU,GAAC,CAACC,OAAD,EAASP,IAAT,KAAgB;AAC/BK,IAAAA,QAAQ,CAAC;AACPE,MAAAA,OAAO,EAACA,OADD;AAEPP,MAAAA,IAAI,EAACA;AAFE,KAAD,CAAR;AAID,GALD;;AAQA,QAAMQ,cAAc,GAAC,MAAI;AACvB,QAAGN,IAAI,KAAG,MAAV,EAAiB;AACfC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAM,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;AACAN,MAAAA,UAAU,CAAC,4BAAD,EAA8B,SAA9B,CAAV;AACD,KAJD,MAKI;AACFH,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAM,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,MAApC;AACAN,MAAAA,UAAU,CAAC,6BAAD,EAA+B,SAA/B,CAAV;AACD;AACF,GAXD;;AAaA,sBACE;AAAA,4BACJ,QAAC,OAAD;AACA,MAAA,IAAI,EAAEJ,IADN;AAEA,MAAA,cAAc,EAAEM;AAFhB;AAAA;AAAA;AAAA;AAAA,YADI,eAIJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAJI,eAMJ;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,UAAU,EAAC,MAAZ;AAAmBC,QAAAA,KAAK,EAACZ,IAAI,IAAE,MAAN,GAAc,QAAd,GAAuB;AAAhD,OAAZ;AAAqE,MAAA,SAAS,EAAC,gBAA/E;AAAA,6BACA,QAAC,QAAD;AACA,QAAA,IAAI,EAAEA;AADN;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YANI;AAAA,kBADF;AAgBD,CAzCD;;GAAMD,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Navbaar from './components/Navbaar'\nimport Textform from './components/Textform'\nimport Alert from './components/Alert'\nimport { type } from '@testing-library/user-event/dist/type'\n\nconst App = () => {\n  let [mode,setMode]=useState('dark');\n  let [alert,setAlert]=useState(null);\n\n  const alertAlert=(massage,type)=>{\n    setAlert({\n      massage:massage,\n      type:type\n    })\n  }\n\n\n  const enableDarkMOde=()=>{\n    if(mode==='dark'){\n      setMode('light')\n      document.body.style.backgroundColor=\"white\"\n      alertAlert('Dark mood has been unabled','success')\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor='grey'\n      alertAlert('Light mood has been unabled','success')\n    }\n  }\n\n  return (\n    <>\n<Navbaar\nmode={mode}\nenableDarkMOde={enableDarkMOde}/>\n<Alert alert={alert}/>\n\n<div style={{fontWeight:\"bold\",color:mode=='dark'? 'yellow':'red' }} className=\"container my-5\">\n<Textform \nmode={mode}\n  \n/>\n\n</div>\n</>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}